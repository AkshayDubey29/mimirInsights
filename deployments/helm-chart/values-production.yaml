# Production Values for MimirInsights
# Update image repositories and domain names for your environment

# Backend Configuration
backend:
  enabled: true
  image:
    repository: mimir-insights-backend
    tag: "v1.0.0-20250718-110355"
    pullPolicy: Never
  replicaCount: 2
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi
  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
  env:
    - name: MIMIR_NAMESPACE
      value: "mimir"
    - name: MIMIR_API_URL
      value: "http://mimir-service:9009"
    - name: LOG_LEVEL
      value: "info"
    - name: K8S_IN_CLUSTER
      value: "true"
    - name: MIMIR_AUTO_DISCOVER
      value: "true"

# Frontend Configuration
frontend:
  enabled: true
  image:
    repository: mimir-insights-frontend
    tag: "v1.0.0-20250718-110355"
    pullPolicy: Never
  replicaCount: 2
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  env:
    - name: ENVIRONMENT
      value: "production"
    - name: API_BASE_URL
      value: "https://mimir-insights.yourdomain.com/api"
    - name: ENABLE_ANALYTICS
      value: "true"
    - name: CACHE_TIMEOUT
      value: "300"
  useMockData: false

# Ingress Configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: mimir-insights.yourdomain.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: mimir-insights-tls
      hosts:
        - mimir-insights.yourdomain.com

# RBAC Configuration
rbac:
  create: true
  rules:
    - apiGroups: [""]
      resources: ["namespaces", "pods", "services", "configmaps", "secrets"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["apps"]
      resources: ["deployments", "statefulsets", "daemonsets", "replicasets"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["networking.k8s.io"]
      resources: ["ingresses"]
      verbs: ["get", "list", "watch"]
    - apiGroups: ["metrics.k8s.io"]
      resources: ["nodes", "pods"]
      verbs: ["get", "list"]

# Service Account
serviceAccount:
  create: true
  name: mimir-insights

# HPA Configuration
hpa:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Security Context
securityContext:
  runAsNonRoot: true
  runAsUser: 1001
  runAsGroup: 1001
  fsGroup: 1001

# Health Probes
probes:
  livenessProbe:
    httpGet:
      path: /api/health
      port: 8080
    initialDelaySeconds: 60
    periodSeconds: 30
    timeoutSeconds: 10
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /api/health
      port: 8080
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3 