---
# Mimir Production Stack
# This creates a complete Mimir deployment with multiple components and tenants

apiVersion: v1
kind: Namespace
metadata:
  name: mimir
  labels:
    app.kubernetes.io/name: mimir
    app.kubernetes.io/part-of: observability
    app.kubernetes.io/component: monitoring
---
apiVersion: v1
kind: Namespace
metadata:
  name: tenant-prod
  labels:
    app.kubernetes.io/name: tenant-prod
    app.kubernetes.io/part-of: mimir
    team: production
    tenant: prod
---
apiVersion: v1
kind: Namespace
metadata:
  name: tenant-staging
  labels:
    app.kubernetes.io/name: tenant-staging
    app.kubernetes.io/part-of: mimir
    team: staging
    tenant: staging
---
apiVersion: v1
kind: Namespace
metadata:
  name: tenant-dev
  labels:
    app.kubernetes.io/name: tenant-dev
    app.kubernetes.io/part-of: mimir
    team: development
    tenant: dev
---
# Mimir Distributor
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimir-distributor
  namespace: mimir
  labels:
    app.kubernetes.io/name: mimir-distributor
    app.kubernetes.io/part-of: mimir
    app.kubernetes.io/component: distributor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir-distributor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir-distributor
        app.kubernetes.io/part-of: mimir
        app.kubernetes.io/component: distributor
    spec:
      containers:
      - name: distributor
        image: grafana/mimir:2.15.0
        args:
        - -target=distributor
        - -config.file=/etc/mimir/mimir.yaml
        ports:
        - name: http-metrics
          containerPort: 9009
        - name: grpc
          containerPort: 9095
        volumeMounts:
        - name: config
          mountPath: /etc/mimir
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: config
        configMap:
          name: mimir-config
---
# Mimir Ingester
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimir-ingester
  namespace: mimir
  labels:
    app.kubernetes.io/name: mimir-ingester
    app.kubernetes.io/part-of: mimir
    app.kubernetes.io/component: ingester
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir-ingester
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir-ingester
        app.kubernetes.io/part-of: mimir
        app.kubernetes.io/component: ingester
    spec:
      containers:
      - name: ingester
        image: grafana/mimir:2.15.0
        args:
        - -target=ingester
        - -config.file=/etc/mimir/mimir.yaml
        ports:
        - name: http-metrics
          containerPort: 9009
        - name: grpc
          containerPort: 9095
        volumeMounts:
        - name: config
          mountPath: /etc/mimir
        - name: storage
          mountPath: /data
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 400m
            memory: 512Mi
      volumes:
      - name: config
        configMap:
          name: mimir-config
      - name: storage
        emptyDir: {}
---
# Mimir Querier
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimir-querier
  namespace: mimir
  labels:
    app.kubernetes.io/name: mimir-querier
    app.kubernetes.io/part-of: mimir
    app.kubernetes.io/component: querier
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir-querier
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir-querier
        app.kubernetes.io/part-of: mimir
        app.kubernetes.io/component: querier
    spec:
      containers:
      - name: querier
        image: grafana/mimir:2.15.0
        args:
        - -target=querier
        - -config.file=/etc/mimir/mimir.yaml
        ports:
        - name: http-metrics
          containerPort: 9009
        - name: grpc
          containerPort: 9095
        volumeMounts:
        - name: config
          mountPath: /etc/mimir
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: config
        configMap:
          name: mimir-config
---
# Mimir Compactor
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimir-compactor
  namespace: mimir
  labels:
    app.kubernetes.io/name: mimir-compactor
    app.kubernetes.io/part-of: mimir
    app.kubernetes.io/component: compactor
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir-compactor
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir-compactor
        app.kubernetes.io/part-of: mimir
        app.kubernetes.io/component: compactor
    spec:
      containers:
      - name: compactor
        image: grafana/mimir:2.15.0
        args:
        - -target=compactor
        - -config.file=/etc/mimir/mimir.yaml
        ports:
        - name: http-metrics
          containerPort: 9009
        volumeMounts:
        - name: config
          mountPath: /etc/mimir
        - name: storage
          mountPath: /data
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: config
        configMap:
          name: mimir-config
      - name: storage
        emptyDir: {}
---
# Mimir Ruler
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimir-ruler
  namespace: mimir
  labels:
    app.kubernetes.io/name: mimir-ruler
    app.kubernetes.io/part-of: mimir
    app.kubernetes.io/component: ruler
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir-ruler
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir-ruler
        app.kubernetes.io/part-of: mimir
        app.kubernetes.io/component: ruler
    spec:
      containers:
      - name: ruler
        image: grafana/mimir:2.15.0
        args:
        - -target=ruler
        - -config.file=/etc/mimir/mimir.yaml
        ports:
        - name: http-metrics
          containerPort: 9009
        volumeMounts:
        - name: config
          mountPath: /etc/mimir
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: config
        configMap:
          name: mimir-config
---
# Mimir Alertmanager
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimir-alertmanager
  namespace: mimir
  labels:
    app.kubernetes.io/name: mimir-alertmanager
    app.kubernetes.io/part-of: mimir
    app.kubernetes.io/component: alertmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir-alertmanager
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir-alertmanager
        app.kubernetes.io/part-of: mimir
        app.kubernetes.io/component: alertmanager
    spec:
      containers:
      - name: alertmanager
        image: grafana/mimir:2.15.0
        args:
        - -target=alertmanager
        - -config.file=/etc/mimir/mimir.yaml
        ports:
        - name: http-metrics
          containerPort: 9009
        volumeMounts:
        - name: config
          mountPath: /etc/mimir
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: config
        configMap:
          name: mimir-config
---
# Mimir Store Gateway
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mimir-store-gateway
  namespace: mimir
  labels:
    app.kubernetes.io/name: mimir-store-gateway
    app.kubernetes.io/part-of: mimir
    app.kubernetes.io/component: store-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir-store-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir-store-gateway
        app.kubernetes.io/part-of: mimir
        app.kubernetes.io/component: store-gateway
    spec:
      containers:
      - name: store-gateway
        image: grafana/mimir:2.15.0
        args:
        - -target=store-gateway
        - -config.file=/etc/mimir/mimir.yaml
        ports:
        - name: http-metrics
          containerPort: 9009
        - name: grpc
          containerPort: 9095
        volumeMounts:
        - name: config
          mountPath: /etc/mimir
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      volumes:
      - name: config
        configMap:
          name: mimir-config
      - name: data
        emptyDir: {}
---
# Mimir Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-config
  namespace: mimir
  labels:
    app.kubernetes.io/name: mimir-config
    app.kubernetes.io/part-of: mimir
data:
  mimir.yaml: |
    server:
      http_listen_port: 9009
      grpc_listen_port: 9095

    memberlist:
      join_members:
        - mimir-distributor.mimir.svc.cluster.local:7946
        - mimir-ingester.mimir.svc.cluster.local:7946
        - mimir-querier.mimir.svc.cluster.local:7946
        - mimir-compactor.mimir.svc.cluster.local:7946
        - mimir-ruler.mimir.svc.cluster.local:7946
        - mimir-alertmanager.mimir.svc.cluster.local:7946
        - mimir-store-gateway.mimir.svc.cluster.local:7946

    limits:
      max_global_series_per_user: 1000000
      max_global_series_per_metric: 100000
      ingestion_rate: 10000
      ingestion_burst_size: 20000

    blocks_storage:
      backend: filesystem
      filesystem:
        dir: /data/blocks
      tsdb:
        dir: /data/tsdb
      bucket_store:
        sync_dir: /data/bucket-store 